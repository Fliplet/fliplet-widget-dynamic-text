/* UPDATE PACKAGE NAME AND VARIABLE PREFIX USING THE SAME VALUES AS "widget.json" */
$packageName: 'com.fliplet.dynamic-text';
$variablePrefix: "slider";

/* ----------------------------------------------------- */

@import "package:com.fliplet.theme.default/scss/core/variables";
@import "package:com.fliplet.theme.default/scss/core/mixins";

@mixin componentStyles($options: (), $widgetInstanceId: "", $widgetInstanceUUID: "") {
  /* LIST HERE ALL VARIABLES FROM YOUR THEME, INCLUDING TABLET AND DESKTOP */
  $configuration: map-merge((dynamicTextBackgroundImage: $dynamicTextBackgroundImage,
        dynamicTextBackgroundColor: $dynamicTextBackgroundColor,
        dynamicTextBackgroundType: $dynamicTextBackgroundType,
        dynamicTextBackgroundSize: $dynamicTextBackgroundSize,
        dynamicTextBackgroundRepeat: $dynamicTextBackgroundRepeat,
        dynamicTextBackgroundPosX: $dynamicTextBackgroundPosX,
        dynamicTextBackgroundPosY: $dynamicTextBackgroundPosY,
        dynamicTextWidth: $dynamicTextWidth,
        dynamicTextHeight: $dynamicTextHeight,
        dynamicTextMinWidth: $dynamicTextMinWidth,
        dynamicTextMaxWidth: $dynamicTextMaxWidth,
        dynamicTextMinHeight: $dynamicTextMinHeight,
        dynamicTextMaxHeight: $dynamicTextMaxHeight,
        dynamicTextPosition: $dynamicTextPosition,
        dynamicTextDisplay: $dynamicTextDisplay,
        dynamicTextPositionTop: $dynamicTextPositionTop,
        dynamicTextPositionRight: $dynamicTextPositionRight,
        dynamicTextPositionBottom: $dynamicTextPositionBottom,
        dynamicTextPositionLeft: $dynamicTextPositionLeft,
        dynamicTextIndex: $dynamicTextIndex,
        dynamicTextMarginTop: $dynamicTextMarginTop,
        dynamicTextMarginRight: $dynamicTextMarginRight,
        dynamicTextMarginBottom: $dynamicTextMarginBottom,
        dynamicTextMarginLeft: $dynamicTextMarginLeft,
        dynamicTextPaddingTop: $dynamicTextPaddingTop,
        dynamicTextPaddingRight: $dynamicTextPaddingRight,
        dynamicTextPaddingBottom: $dynamicTextPaddingBottom,
        dynamicTextPaddingLeft: $dynamicTextPaddingLeft,
        dynamicTextBorderSides: $dynamicTextBorderSides,
        dynamicTextBorderWidth: $dynamicTextBorderWidth,
        dynamicTextBorderStyle: $dynamicTextBorderStyle,
        dynamicTextBorderColor: $dynamicTextBorderColor,
        dynamicTextBorderRadius: $dynamicTextBorderRadius,
        dynamicTextShadowStyle: $dynamicTextShadowStyle,
        dynamicTextShadowXoffset: $dynamicTextShadowXoffset,
        dynamicTextShadowYoffset: $dynamicTextShadowYoffset,
        dynamicTextShadowBlur: $dynamicTextShadowBlur,
        dynamicTextShadowSpread: $dynamicTextShadowSpread,
        dynamicTextShadowColor: $dynamicTextShadowColor,
        paragraphFontFamily: $paragraphFontFamily,
        paragraphFontSize: $paragraphFontSize,
        paragraphTextColor: $paragraphTextColor,
        paragraphFontWeight: $paragraphFontWeight,
        paragraphFontStyle: $paragraphFontStyle,
        paragraphFontDecoration: $paragraphFontDecoration,
        paragraphLineHeight: $paragraphLineHeight,
        paragraphMarginTop: $paragraphMarginTop,
        paragraphMarginBottom: $paragraphMarginBottom,
        dynamicTextVisibility: $dynamicTextVisibility,
        dynamicTextBackgroundImageTablet: $dynamicTextBackgroundImageTablet,
        dynamicTextBackgroundColorTablet: $dynamicTextBackgroundColorTablet,
        dynamicTextBackgroundTypeTablet: $dynamicTextBackgroundTypeTablet,
        dynamicTextBackgroundSizeTablet: $dynamicTextBackgroundSizeTablet,
        dynamicTextBackgroundRepeatTablet: $dynamicTextBackgroundRepeatTablet,
        dynamicTextBackgroundPosXTablet: $dynamicTextBackgroundPosXTablet,
        dynamicTextBackgroundPosYTablet: $dynamicTextBackgroundPosYTablet,
        dynamicTextWidthTablet: $dynamicTextWidthTablet,
        dynamicTextHeightTablet: $dynamicTextHeightTablet,
        dynamicTextMinWidthTablet: $dynamicTextMinWidthTablet,
        dynamicTextMaxWidthTablet: $dynamicTextMaxWidthTablet,
        dynamicTextMinHeightTablet: $dynamicTextMinHeightTablet,
        dynamicTextMaxHeightTablet: $dynamicTextMaxHeightTablet,
        dynamicTextPositionTablet: $dynamicTextPositionTablet,
        dynamicTextDisplayTablet: $dynamicTextDisplayTablet,
        dynamicTextPositionTopTablet: $dynamicTextPositionTopTablet,
        dynamicTextPositionRightTablet: $dynamicTextPositionRightTablet,
        dynamicTextPositionBottomTablet: $dynamicTextPositionBottomTablet,
        dynamicTextPositionLeftTablet: $dynamicTextPositionLeftTablet,
        dynamicTextIndexTablet: $dynamicTextIndexTablet,
        dynamicTextMarginTopTablet: $dynamicTextMarginTopTablet,
        dynamicTextMarginRightTablet: $dynamicTextMarginRightTablet,
        dynamicTextMarginBottomTablet: $dynamicTextMarginBottomTablet,
        dynamicTextMarginLeftTablet: $dynamicTextMarginLeftTablet,
        dynamicTextPaddingTopTablet: $dynamicTextPaddingTopTablet,
        dynamicTextPaddingRightTablet: $dynamicTextPaddingRightTablet,
        dynamicTextPaddingBottomTablet: $dynamicTextPaddingBottomTablet,
        dynamicTextPaddingLeftTablet: $dynamicTextPaddingLeftTablet,
        dynamicTextBorderSidesTablet: $dynamicTextBorderSidesTablet,
        dynamicTextBorderWidthTablet: $dynamicTextBorderWidthTablet,
        dynamicTextBorderStyleTablet: $dynamicTextBorderStyleTablet,
        dynamicTextBorderColorTablet: $dynamicTextBorderColorTablet,
        dynamicTextBorderRadiusTablet: $dynamicTextBorderRadiusTablet,
        dynamicTextShadowStyleTablet: $dynamicTextShadowStyleTablet,
        dynamicTextShadowXoffsetTablet: $dynamicTextShadowXoffsetTablet,
        dynamicTextShadowYoffsetTablet: $dynamicTextShadowYoffsetTablet,
        dynamicTextShadowBlurTablet: $dynamicTextShadowBlurTablet,
        dynamicTextShadowSpreadTablet: $dynamicTextShadowSpreadTablet,
        dynamicTextShadowColorTablet: $dynamicTextShadowColorTablet,
        paragraphFontFamilyTablet: $paragraphFontFamilyTablet,
        paragraphFontSizeTablet: $paragraphFontSizeTablet,
        paragraphTextColorTablet: $paragraphTextColorTablet,
        paragraphFontWeightTablet: $paragraphFontWeightTablet,
        paragraphFontStyleTablet: $paragraphFontStyleTablet,
        paragraphFontDecorationTablet: $paragraphFontDecorationTablet,
        paragraphLineHeightTablet: $paragraphLineHeightTablet,
        paragraphMarginTopTablet: $paragraphMarginTopTablet,
        paragraphMarginBottomTablet: $paragraphMarginBottomTablet,
        dynamicTextVisibilityTablet: $dynamicTextVisibilityTablet,
        dynamicTextBackgroundImageDesktop: $dynamicTextBackgroundImageDesktop,
        dynamicTextBackgroundColorDesktop: $dynamicTextBackgroundColorDesktop,
        dynamicTextBackgroundTypeDesktop: $dynamicTextBackgroundTypeDesktop,
        dynamicTextBackgroundSizeDesktop: $dynamicTextBackgroundSizeDesktop,
        dynamicTextBackgroundRepeatDesktop: $dynamicTextBackgroundRepeatDesktop,
        dynamicTextBackgroundPosXDesktop: $dynamicTextBackgroundPosXDesktop,
        dynamicTextBackgroundPosYDesktop: $dynamicTextBackgroundPosYDesktop,
        dynamicTextWidthDesktop: $dynamicTextWidthDesktop,
        dynamicTextHeightDesktop: $dynamicTextHeightDesktop,
        dynamicTextMinWidthDesktop: $dynamicTextMinWidthDesktop,
        dynamicTextMaxWidthDesktop: $dynamicTextMaxWidthDesktop,
        dynamicTextMinHeightDesktop: $dynamicTextMinHeightDesktop,
        dynamicTextMaxHeightDesktop: $dynamicTextMaxHeightDesktop,
        dynamicTextPositionDesktop: $dynamicTextPositionDesktop,
        dynamicTextPositionTopDesktop: $dynamicTextPositionTopDesktop,
        dynamicTextDisplayDesktop: $dynamicTextDisplayDesktop,
        dynamicTextPositionRightDesktop: $dynamicTextPositionRightDesktop,
        dynamicTextPositionBottomDesktop: $dynamicTextPositionBottomDesktop,
        dynamicTextPositionLeftDesktop: $dynamicTextPositionLeftDesktop,
        dynamicTextIndexDesktop: $dynamicTextIndexDesktop,
        dynamicTextMarginTopDesktop: $dynamicTextMarginTopDesktop,
        dynamicTextMarginRightDesktop: $dynamicTextMarginRightDesktop,
        dynamicTextMarginBottomDesktop: $dynamicTextMarginBottomDesktop,
        dynamicTextMarginLeftDesktop: $dynamicTextMarginLeftDesktop,
        dynamicTextPaddingTopDesktop: $dynamicTextPaddingTopDesktop,
        dynamicTextPaddingRightDesktop: $dynamicTextPaddingRightDesktop,
        dynamicTextPaddingBottomDesktop: $dynamicTextPaddingBottomDesktop,
        dynamicTextPaddingLeftDesktop: $dynamicTextPaddingLeftDesktop,
        dynamicTextBorderSidesDesktop: $dynamicTextBorderSidesDesktop,
        dynamicTextBorderWidthDesktop: $dynamicTextBorderWidthDesktop,
        dynamicTextBorderStyleDesktop: $dynamicTextBorderStyleDesktop,
        dynamicTextBorderColorDesktop: $dynamicTextBorderColorDesktop,
        dynamicTextBorderRadiusDesktop: $dynamicTextBorderRadiusDesktop,
        dynamicTextShadowStyleDesktop: $dynamicTextShadowStyleDesktop,
        dynamicTextShadowXoffsetDesktop: $dynamicTextShadowXoffsetDesktop,
        dynamicTextShadowYoffsetDesktop: $dynamicTextShadowYoffsetDesktop,
        dynamicTextShadowBlurDesktop: $dynamicTextShadowBlurDesktop,
        dynamicTextShadowSpreadDesktop: $dynamicTextShadowSpreadDesktop,
        dynamicTextShadowColorDesktop: $dynamicTextShadowColorDesktop,
        paragraphFontFamilyDesktop: $paragraphFontFamilyDesktop,
        paragraphFontSizeDesktop: $paragraphFontSizeDesktop,
        paragraphTextColorDesktop: $paragraphTextColorDesktop,
        paragraphFontWeightDesktop: $paragraphFontWeightDesktop,
        paragraphFontStyleDesktop: $paragraphFontStyleDesktop,
        paragraphFontDecorationDesktop: $paragraphFontDecorationDesktop,
        paragraphLineHeightDesktop: $paragraphLineHeightDesktop,
        paragraphMarginTopDesktop: $paragraphMarginTopDesktop,
        paragraphMarginBottomDesktop: $paragraphMarginBottomDesktop,
        dynamicTextVisibilityDesktop: $dynamicTextVisibilityDesktop,
        dynamicTextHeadingOneColor: $dynamicTextHeadingOneColor,
        dynamicTextHeadingOneFontFamily: $dynamicTextHeadingOneFontFamily,
        dynamicTextHeadingOneSize: $dynamicTextHeadingOneSize,
        dynamicTextHeadingOneHeight: $dynamicTextHeadingOneHeight,
        dynamicTextHeadingOneWeight: $dynamicTextHeadingOneWeight,
        dynamicTextHeadingOneStyle: $dynamicTextHeadingOneStyle,
        dynamicTextHeadingOneDecoration: $dynamicTextHeadingOneDecoration,
        dynamicTextHeadingOneMarginTop: $dynamicTextHeadingOneMarginTop,
        dynamicTextHeadingOneMarginBottom: $dynamicTextHeadingOneMarginBottom,
        dynamicTextHeadingOneColorTablet: $dynamicTextHeadingOneColorTablet,
        dynamicTextHeadingOneFontFamilyTablet: $dynamicTextHeadingOneFontFamilyTablet,
        dynamicTextHeadingOneSizeTablet: $dynamicTextHeadingOneSizeTablet,
        dynamicTextHeadingOneHeightTablet: $dynamicTextHeadingOneHeightTablet,
        dynamicTextHeadingOneWeightTablet: $dynamicTextHeadingOneWeightTablet,
        dynamicTextHeadingOneStyleTablet: $dynamicTextHeadingOneStyleTablet,
        dynamicTextHeadingOneDecorationTablet: $dynamicTextHeadingOneDecorationTablet,
        dynamicTextHeadingOneMarginTopTablet: $dynamicTextHeadingOneMarginTopTablet,
        dynamicTextHeadingOneMarginBottomTablet: $dynamicTextHeadingOneMarginBottomTablet,
        dynamicTextHeadingOneColorDesktop: $dynamicTextHeadingOneColorDesktop,
        dynamicTextHeadingOneFontFamilyDesktop: $dynamicTextHeadingOneFontFamilyDesktop,
        dynamicTextHeadingOneSizeDesktop: $dynamicTextHeadingOneSizeDesktop,
        dynamicTextHeadingOneHeightDesktop: $dynamicTextHeadingOneHeightDesktop,
        dynamicTextHeadingOneWeightDesktop: $dynamicTextHeadingOneWeightDesktop,
        dynamicTextHeadingOneStyleDesktop: $dynamicTextHeadingOneStyleDesktop,
        dynamicTextHeadingOneDecorationDesktop: $dynamicTextHeadingOneDecorationDesktop,
        dynamicTextHeadingOneMarginTopDesktop: $dynamicTextHeadingOneMarginTopDesktop,
        dynamicTextHeadingOneMarginBottomDesktop: $dynamicTextHeadingOneMarginBottomDesktop,
        dynamicTextHeadingTwoColor: $dynamicTextHeadingTwoColor,
        dynamicTextHeadingTwoFontFamily: $dynamicTextHeadingTwoFontFamily,
        dynamicTextHeadingTwoSize: $dynamicTextHeadingTwoSize,
        dynamicTextHeadingTwoHeight: $dynamicTextHeadingTwoHeight,
        dynamicTextHeadingTwoWeight: $dynamicTextHeadingTwoWeight,
        dynamicTextHeadingTwoStyle: $dynamicTextHeadingTwoStyle,
        dynamicTextHeadingTwoDecoration: $dynamicTextHeadingTwoDecoration,
        dynamicTextHeadingTwoMarginTop: $dynamicTextHeadingTwoMarginTop,
        dynamicTextHeadingTwoMarginBottom: $dynamicTextHeadingTwoMarginBottom,
        dynamicTextHeadingTwoColorTablet: $dynamicTextHeadingTwoColorTablet,
        dynamicTextHeadingTwoFontFamilyTablet: $dynamicTextHeadingTwoFontFamilyTablet,
        dynamicTextHeadingTwoSizeTablet: $dynamicTextHeadingTwoSizeTablet,
        dynamicTextHeadingTwoHeightTablet: $dynamicTextHeadingTwoHeightTablet,
        dynamicTextHeadingTwoWeightTablet: $dynamicTextHeadingTwoWeightTablet,
        dynamicTextHeadingTwoStyleTablet: $dynamicTextHeadingTwoStyleTablet,
        dynamicTextHeadingTwoDecorationTablet: $dynamicTextHeadingTwoDecorationTablet,
        dynamicTextHeadingTwoMarginTopTablet: $dynamicTextHeadingTwoMarginTopTablet,
        dynamicTextHeadingTwoMarginBottomTablet: $dynamicTextHeadingTwoMarginBottomTablet,
        dynamicTextHeadingTwoColorDesktop: $dynamicTextHeadingTwoColorDesktop,
        dynamicTextHeadingTwoFontFamilyDesktop: $dynamicTextHeadingTwoFontFamilyDesktop,
        dynamicTextHeadingTwoSizeDesktop: $dynamicTextHeadingTwoSizeDesktop,
        dynamicTextHeadingTwoHeightDesktop: $dynamicTextHeadingTwoHeightDesktop,
        dynamicTextHeadingTwoWeightDesktop: $dynamicTextHeadingTwoWeightDesktop,
        dynamicTextHeadingTwoStyleDesktop: $dynamicTextHeadingTwoStyleDesktop,
        dynamicTextHeadingTwoDecorationDesktop: $dynamicTextHeadingTwoDecorationDesktop,
        dynamicTextHeadingTwoMarginTopDesktop: $dynamicTextHeadingTwoMarginTopDesktop,
        dynamicTextHeadingTwoMarginBottomDesktop: $dynamicTextHeadingTwoMarginBottomDesktop,
        dynamicTextHeadingThreeColor: $dynamicTextHeadingThreeColor,
        dynamicTextHeadingThreeFontFamily: $dynamicTextHeadingThreeFontFamily,
        dynamicTextHeadingThreeSize: $dynamicTextHeadingThreeSize,
        dynamicTextHeadingThreeHeight: $dynamicTextHeadingThreeHeight,
        dynamicTextHeadingThreeWeight: $dynamicTextHeadingThreeWeight,
        dynamicTextHeadingThreeStyle: $dynamicTextHeadingThreeStyle,
        dynamicTextHeadingThreeDecoration: $dynamicTextHeadingThreeDecoration,
        dynamicTextHeadingThreeMarginTop: $dynamicTextHeadingThreeMarginTop,
        dynamicTextHeadingThreeMarginBottom: $dynamicTextHeadingThreeMarginBottom,
        dynamicTextHeadingThreeColorTablet: $dynamicTextHeadingThreeColorTablet,
        dynamicTextHeadingThreeFontFamilyTablet: $dynamicTextHeadingThreeFontFamilyTablet,
        dynamicTextHeadingThreeSizeTablet: $dynamicTextHeadingThreeSizeTablet,
        dynamicTextHeadingThreeHeightTablet: $dynamicTextHeadingThreeHeightTablet,
        dynamicTextHeadingThreeWeightTablet: $dynamicTextHeadingThreeWeightTablet,
        dynamicTextHeadingThreeStyleTablet: $dynamicTextHeadingThreeStyleTablet,
        dynamicTextHeadingThreeDecorationTablet: $dynamicTextHeadingThreeDecorationTablet,
        dynamicTextHeadingThreeMarginTopTablet: $dynamicTextHeadingThreeMarginTopTablet,
        dynamicTextHeadingThreeMarginBottomTablet: $dynamicTextHeadingThreeMarginBottomTablet,
        dynamicTextHeadingThreeColorDesktop: $dynamicTextHeadingThreeColorDesktop,
        dynamicTextHeadingThreeFontFamilyDesktop: $dynamicTextHeadingThreeFontFamilyDesktop,
        dynamicTextHeadingThreeSizeDesktop: $dynamicTextHeadingThreeSizeDesktop,
        dynamicTextHeadingThreeHeightDesktop: $dynamicTextHeadingThreeHeightDesktop,
        dynamicTextHeadingThreeWeightDesktop: $dynamicTextHeadingThreeWeightDesktop,
        dynamicTextHeadingThreeStyleDesktop: $dynamicTextHeadingThreeStyleDesktop,
        dynamicTextHeadingThreeDecorationDesktop: $dynamicTextHeadingThreeDecorationDesktop,
        dynamicTextHeadingThreeMarginTopDesktop: $dynamicTextHeadingThreeMarginTopDesktop,
        dynamicTextHeadingThreeMarginBottomDesktop: $dynamicTextHeadingThreeMarginBottomDesktop,
        dynamicTextHeadingFourColor: $dynamicTextHeadingFourColor,
        dynamicTextHeadingFourFontFamily: $dynamicTextHeadingFourFontFamily,
        dynamicTextHeadingFourSize: $dynamicTextHeadingFourSize,
        dynamicTextHeadingFourHeight: $dynamicTextHeadingFourHeight,
        dynamicTextHeadingFourWeight: $dynamicTextHeadingFourWeight,
        dynamicTextHeadingFourStyle: $dynamicTextHeadingFourStyle,
        dynamicTextHeadingFourDecoration: $dynamicTextHeadingFourDecoration,
        dynamicTextHeadingFourMarginTop: $dynamicTextHeadingFourMarginTop,
        dynamicTextHeadingFourMarginBottom: $dynamicTextHeadingFourMarginBottom,
        dynamicTextHeadingFourColorTablet: $dynamicTextHeadingFourColorTablet,
        dynamicTextHeadingFourFontFamilyTablet: $dynamicTextHeadingFourFontFamilyTablet,
        dynamicTextHeadingFourSizeTablet: $dynamicTextHeadingFourSizeTablet,
        dynamicTextHeadingFourHeightTablet: $dynamicTextHeadingFourHeightTablet,
        dynamicTextHeadingFourWeightTablet: $dynamicTextHeadingFourWeightTablet,
        dynamicTextHeadingFourStyleTablet: $dynamicTextHeadingFourStyleTablet,
        dynamicTextHeadingFourDecorationTablet: $dynamicTextHeadingFourDecorationTablet,
        dynamicTextHeadingFourMarginTopTablet: $dynamicTextHeadingFourMarginTopTablet,
        dynamicTextHeadingFourMarginBottomTablet: $dynamicTextHeadingFourMarginBottomTablet,
        dynamicTextHeadingFourColorDesktop: $dynamicTextHeadingFourColorDesktop,
        dynamicTextHeadingFourFontFamilyDesktop: $dynamicTextHeadingFourFontFamilyDesktop,
        dynamicTextHeadingFourSizeDesktop: $dynamicTextHeadingFourSizeDesktop,
        dynamicTextHeadingFourHeightDesktop: $dynamicTextHeadingFourHeightDesktop,
        dynamicTextHeadingFourWeightDesktop: $dynamicTextHeadingFourWeightDesktop,
        dynamicTextHeadingFourStyleDesktop: $dynamicTextHeadingFourStyleDesktop,
        dynamicTextHeadingFourDecorationDesktop: $dynamicTextHeadingFourDecorationDesktop,
        dynamicTextHeadingFourMarginTopDesktop: $dynamicTextHeadingFourMarginTopDesktop,
        dynamicTextHeadingFourMarginBottomDesktop: $dynamicTextHeadingFourMarginBottomDesktop,
        dynamicTextHeadingFiveColor: $dynamicTextHeadingFiveColor,
        dynamicTextHeadingFiveFontFamily: $dynamicTextHeadingFiveFontFamily,
        dynamicTextHeadingFiveSize: $dynamicTextHeadingFiveSize,
        dynamicTextHeadingFiveHeight: $dynamicTextHeadingFiveHeight,
        dynamicTextHeadingFiveWeight: $dynamicTextHeadingFiveWeight,
        dynamicTextHeadingFiveStyle: $dynamicTextHeadingFiveStyle,
        dynamicTextHeadingFiveDecoration: $dynamicTextHeadingFiveDecoration,
        dynamicTextHeadingFiveMarginTop: $dynamicTextHeadingFiveMarginTop,
        dynamicTextHeadingFiveMarginBottom: $dynamicTextHeadingFiveMarginBottom,
        dynamicTextHeadingFiveColorTablet: $dynamicTextHeadingFiveColorTablet,
        dynamicTextHeadingFiveFontFamilyTablet: $dynamicTextHeadingFiveFontFamilyTablet,
        dynamicTextHeadingFiveSizeTablet: $dynamicTextHeadingFiveSizeTablet,
        dynamicTextHeadingFiveHeightTablet: $dynamicTextHeadingFiveHeightTablet,
        dynamicTextHeadingFiveWeightTablet: $dynamicTextHeadingFiveWeightTablet,
        dynamicTextHeadingFiveStyleTablet: $dynamicTextHeadingFiveStyleTablet,
        dynamicTextHeadingFiveDecorationTablet: $dynamicTextHeadingFiveDecorationTablet,
        dynamicTextHeadingFiveMarginTopTablet: $dynamicTextHeadingFiveMarginTopTablet,
        dynamicTextHeadingFiveMarginBottomTablet: $dynamicTextHeadingFiveMarginBottomTablet,
        dynamicTextHeadingFiveColorDesktop: $dynamicTextHeadingFiveColorDesktop,
        dynamicTextHeadingFiveFontFamilyDesktop: $dynamicTextHeadingFiveFontFamilyDesktop,
        dynamicTextHeadingFiveSizeDesktop: $dynamicTextHeadingFiveSizeDesktop,
        dynamicTextHeadingFiveHeightDesktop: $dynamicTextHeadingFiveHeightDesktop,
        dynamicTextHeadingFiveWeightDesktop: $dynamicTextHeadingFiveWeightDesktop,
        dynamicTextHeadingFiveStyleDesktop: $dynamicTextHeadingFiveStyleDesktop,
        dynamicTextHeadingFiveDecorationDesktop: $dynamicTextHeadingFiveDecorationDesktop,
        dynamicTextHeadingFiveMarginTopDesktop: $dynamicTextHeadingFiveMarginTopDesktop,
        dynamicTextHeadingFiveMarginBottomDesktop: $dynamicTextHeadingFiveMarginBottomDesktop,
        dynamicTextHeadingSixColor: $dynamicTextHeadingSixColor,
        dynamicTextHeadingSixFontFamily: $dynamicTextHeadingSixFontFamily,
        dynamicTextHeadingSixSize: $dynamicTextHeadingSixSize,
        dynamicTextHeadingSixHeight: $dynamicTextHeadingSixHeight,
        dynamicTextHeadingSixWeight: $dynamicTextHeadingSixWeight,
        dynamicTextHeadingSixStyle: $dynamicTextHeadingSixStyle,
        dynamicTextHeadingSixDecoration: $dynamicTextHeadingSixDecoration,
        dynamicTextHeadingSixMarginTop: $dynamicTextHeadingSixMarginTop,
        dynamicTextHeadingSixMarginBottom: $dynamicTextHeadingSixMarginBottom,
        dynamicTextHeadingSixColorTablet: $dynamicTextHeadingSixColorTablet,
        dynamicTextHeadingSixFontFamilyTablet: $dynamicTextHeadingSixFontFamilyTablet,
        dynamicTextHeadingSixSizeTablet: $dynamicTextHeadingSixSizeTablet,
        dynamicTextHeadingSixHeightTablet: $dynamicTextHeadingSixHeightTablet,
        dynamicTextHeadingSixWeightTablet: $dynamicTextHeadingSixWeightTablet,
        dynamicTextHeadingSixStyleTablet: $dynamicTextHeadingSixStyleTablet,
        dynamicTextHeadingSixDecorationTablet: $dynamicTextHeadingSixDecorationTablet,
        dynamicTextHeadingSixMarginTopTablet: $dynamicTextHeadingSixMarginTopTablet,
        dynamicTextHeadingSixMarginBottomTablet: $dynamicTextHeadingSixMarginBottomTablet,
        dynamicTextHeadingSixColorDesktop: $dynamicTextHeadingSixColorDesktop,
        dynamicTextHeadingSixFontFamilyDesktop: $dynamicTextHeadingSixFontFamilyDesktop,
        dynamicTextHeadingSixSizeDesktop: $dynamicTextHeadingSixSizeDesktop,
        dynamicTextHeadingSixHeightDesktop: $dynamicTextHeadingSixHeightDesktop,
        dynamicTextHeadingSixWeightDesktop: $dynamicTextHeadingSixWeightDesktop,
        dynamicTextHeadingSixStyleDesktop: $dynamicTextHeadingSixStyleDesktop,
        dynamicTextHeadingSixDecorationDesktop: $dynamicTextHeadingSixDecorationDesktop,
        dynamicTextHeadingSixMarginTopDesktop: $dynamicTextHeadingSixMarginTopDesktop,
        dynamicTextHeadingSixMarginBottomDesktop: $dynamicTextHeadingSixMarginBottomDesktop),
      $options);

  $instanceSelector: '[data-widget-package="#{$packageName}"]';

  @if $widgetInstanceUUID !="" {
    $instanceSelector: '#{$instanceSelector}[data-uuid="#{$widgetInstanceUUID}"]';
  }

  @else if $widgetInstanceId !="" {
    $instanceSelector: '#{$instanceSelector}[data-id="#{$widgetInstanceId}"]';
  }

  #{$instanceSelector} {
    $instanceSelector: '[data-widget-package="com.fliplet.dynamic-text"]';

    @if $widgetInstanceUUID !="" {
      $instanceSelector: '#{$instanceSelector}[data-uuid="#{$widgetInstanceUUID}"]';
    }

    @else if $widgetInstanceId !="" {
      $instanceSelector: '#{$instanceSelector}[data-id="#{$widgetInstanceId}"]';
    }

    #{$instanceSelector} {
      @if map-get($configuration, textBackgroundType)=="Image" {
        @if map-get($configuration, dynamicTextBackgroundImage)=="none" {
          background-image: map-get($configuration, dynamicTextBackgroundImage);
        }

        @else {
          background-image: url("#{map-get($configuration, dynamicTextBackgroundImage)}");
        }
      }

      @else if map-get($configuration, dynamicTextBackgroundType)=="Color" {
        background-image: none;
        background-color: map-get($configuration, dynamicTextBackgroundColor);
      }

      @else {
        background-image: none;
        background-color: transparent;
      }

      background-size: map-get($configuration, dynamicTextBackgroundSize);
      background-repeat: map-get($configuration, dynamicTextBackgroundRepeat);
      background-position: map-get($configuration, dynamicTextBackgroundPosX) map-get($configuration, dynamicTextBackgroundPosY);

      position: map-get($configuration, dynamicTextPosition) !important;
      z-index: map-get($configuration, dynamicTextIndex);

      @if map-get($configuration, dynamicTextPosition)=="relative" {
        @if map-get($configuration, dynamicTextVisibility)=="visible" {
          display: map-get($configuration, dynamicTextDisplay) !important;
        }

        @else {
          display: none !important;
        }
      }

      @else {
        @if map-get($configuration, dynamicTextVisibility)=="visible" {
          display: block !important;
        }

        @else {
          display: none !important;
        }

        top: map-get($configuration, dynamicTextPositionTop);
        right: map-get($configuration, dynamicTextPositionRight);
        bottom: map-get($configuration, dynamicTextPositionBottom);
        left: map-get($configuration, dynamicTextPositionLeft);
      }

      width: map-get($configuration, dynamicTextWidth);
      min-width: map-get($configuration, dynamicTextMinWidth);
      max-width: map-get($configuration, dynamicTextMaxWidth);
      height: auto !important;
      min-height: map-get($configuration, dynamicTextMinHeight);
      max-height: map-get($configuration, dynamicTextMaxHeight);
      margin: map-get($configuration, dynamicTextMarginTop) map-get($configuration, dynamicTextMarginRight) map-get($configuration, dynamicTextMarginBottom) map-get($configuration, dynamicTextMarginLeft);
      padding: map-get($configuration, dynamicTextPaddingTop) map-get($configuration, dynamicTextPaddingRight) map-get($configuration, dynamicTextPaddingBottom) map-get($configuration, dynamicTextPaddingLeft);

      @include borderOnly((borderSides: map-get($configuration, dynamicTextBorderSides),
          borderWidth: map-get($configuration, dynamicTextBorderWidth),
          borderStyle: map-get($configuration, dynamicTextBorderStyle),
          borderColor: map-get($configuration, dynamicTextBorderColor)));
      border-radius: map-get($configuration, dynamicTextBorderRadius);
      @include shadowOnly((shadowStyle: map-get($configuration, dynamicTextShadowStyle),
          shadowXOffset: map-get($configuration, dynamicTextShadowXoffset),
          shadowYOffset: map-get($configuration, dynamicTextShadowYoffset),
          shadowBlur: map-get($configuration, dynamicTextShadowBlur),
          shadowSpread: map-get($configuration, dynamicTextShadowSpread),
          shadowColor: map-get($configuration, dynamicTextShadowColor)));

      // Styles for tablet
      @include above($tabletBreakpoint) {
        @if map-get($configuration, dynamicTextBackgroundTypeTablet)=="Image" {
          @if map-get($configuration, dynamicTextBackgroundImageTablet)=="none" {
            background-image: map-get($configuration, dynamicTextBackgroundImageTablet);
          }

          @else {
            background-image: url("#{map-get($configuration, dynamicTextBackgroundImageTablet)}");
          }
        }

        @else if map-get($configuration, dynamicTextBackgroundTypeTablet)=="Color" {
          background-image: none;
          background-color: map-get($configuration, dynamicTextBackgroundColorTablet);
        }

        @else {
          background-image: none;
          background-color: transparent;
        }

        background-size: map-get($configuration, dynamicTextBackgroundSizeTablet);
        background-repeat: map-get($configuration, dynamicTextBackgroundRepeatTablet);
        background-position: map-get($configuration, dynamicTextBackgroundPosXTablet) map-get($configuration, dynamicTextBackgroundPosYTablet);

        position: map-get($configuration, dynamicTextPositionTablet) !important;
        z-index: map-get($configuration, dynamicTextIndexTablet);

        @if map-get($configuration, dynamicTextPositionTablet)=="relative" {
          @if map-get($configuration, dynamicTextVisibilityTablet)=="visible" {
            display: map-get($configuration, dynamicTextDisplayTablet) !important;
          }

          @else {
            display: none !important;
          }
        }

        @else {
          @if map-get($configuration, dynamicTextVisibilityTablet)=="visible" {
            display: block !important;
          }

          @else {
            display: none !important;
          }

          top: map-get($configuration, dynamicTextPositionTopTablet);
          right: map-get($configuration, dynamicTextPositionRightTablet);
          bottom: map-get($configuration, dynamicTextPositionBottomTablet);
          left: map-get($configuration, dynamicTextPositionLeftTablet);
        }

        width: map-get($configuration, dynamicTextWidthTablet);
        min-width: map-get($configuration, dynamicTextMinWidthTablet);
        max-width: map-get($configuration, dynamicTextMaxWidthTablet);
        height: auto !important;
        min-height: map-get($configuration, dynamicTextMinHeightTablet);
        max-height: map-get($configuration, dynamicTextMaxHeightTablet);
        margin: map-get($configuration, dynamicTextMarginTopTablet) map-get($configuration, dynamicTextMarginRightTablet) map-get($configuration, dynamicTextMarginBottomTablet) map-get($configuration, dynamicTextMarginLeftTablet);
        padding: map-get($configuration, dynamicTextPaddingTopTablet) map-get($configuration, dynamicTextPaddingRightTablet) map-get($configuration, dynamicTextPaddingBottomTablet) map-get($configuration, dynamicTextPaddingLeftTablet);

        @include borderOnly((borderSides: map-get($configuration, dynamicTextBorderSidesTablet),
            borderWidth: map-get($configuration, dynamicTextBorderWidthTablet),
            borderStyle: map-get($configuration, dynamicTextBorderStyleTablet),
            borderColor: map-get($configuration, dynamicTextBorderColorTablet)));
        border-radius: map-get($configuration, dynamicTextBorderRadiusTablet);
        @include shadowOnly((shadowStyle: map-get($configuration, dynamicTextShadowStyleTablet),
            shadowXOffset: map-get($configuration, dynamicTextShadowXoffsetTablet),
            shadowYOffset: map-get($configuration, dynamicTextShadowYoffsetTablet),
            shadowBlur: map-get($configuration, dynamicTextShadowBlurTablet),
            shadowSpread: map-get($configuration, dynamicTextShadowSpreadTablet),
            shadowColor: map-get($configuration, dynamicTextShadowColorTablet)));
      }

      // Styles for desktop
      @include above($desktopBreakpoint) {
        @if map-get($configuration, dynamicTextBackgroundTypeDesktop)=="Image" {
          @if map-get($configuration, dynamicTextBackgroundImageDesktop)=="none" {
            background-image: map-get($configuration, dynamicTextBackgroundImageDesktop);
          }

          @else {
            background-image: url("#{map-get($configuration, dynamicTextBackgroundImageDesktop)}");
          }
        }

        @else if map-get($configuration, dynamicTextBackgroundTypeDesktop)=="Color" {
          background-image: none;
          background-color: map-get($configuration, dynamicTextBackgroundColorDesktop);
        }

        @else {
          background-image: none;
          background-color: transparent;
        }

        background-size: map-get($configuration, dynamicTextBackgroundSizeDesktop);
        background-repeat: map-get($configuration, dynamicTextBackgroundRepeatDesktop);
        background-position: map-get($configuration, dynamicTextBackgroundPosXDesktop) map-get($configuration, dynamicTextBackgroundPosYDesktop);

        position: map-get($configuration, dynamicTextPositionDesktop) !important;
        z-index: map-get($configuration, dynamicTextIndexDesktop);

        @if map-get($configuration, dynamicTextPositionDesktop)=="relative" {
          @if map-get($configuration, dynamicTextVisibilityDesktop)=="visible" {
            display: map-get($configuration, dynamicTextDisplayDesktop) !important;
          }

          @else {
            display: none !important;
          }
        }

        @else {
          @if map-get($configuration, dynamicTextVisibilityDesktop)=="visible" {
            display: block !important;
          }

          @else {
            display: none !important;
          }

          top: map-get($configuration, dynamicTextPositionTopDesktop);
          right: map-get($configuration, dynamicTextPositionRightDesktop);
          bottom: map-get($configuration, dynamicTextPositionBottomDesktop);
          left: map-get($configuration, dynamicTextPositionLeftDesktop);
        }

        width: map-get($configuration, dynamicTextWidthDesktop);
        min-width: map-get($configuration, dynamicTextMinWidthDesktop);
        max-width: map-get($configuration, dynamicTextMaxWidthDesktop);
        height: auto !important;
        min-height: map-get($configuration, dynamicTextMinHeightDesktop);
        max-height: map-get($configuration, dynamicTextMaxHeightDesktop);
        margin: map-get($configuration, dynamicTextMarginTopDesktop) map-get($configuration, dynamicTextMarginRightDesktop) map-get($configuration, dynamicTextMarginBottomDesktop) map-get($configuration, dynamicTextMarginLeftDesktop);
        padding: map-get($configuration, dynamicTextPaddingTopDesktop) map-get($configuration, dynamicTextPaddingRightDesktop) map-get($configuration, dynamicTextPaddingBottomDesktop) map-get($configuration, dynamicTextPaddingLeftDesktop);

        @include borderOnly((borderSides: map-get($configuration, dynamicTextBorderSidesDesktop),
            borderWidth: map-get($configuration, dynamicTextBorderWidthDesktop),
            borderStyle: map-get($configuration, dynamicTextBorderStyleDesktop),
            borderColor: map-get($configuration, dynamicTextBorderColorDesktop)));
        border-radius: map-get($configuration, dynamicTextBorderRadiusDesktop);
        @include shadowOnly((shadowStyle: map-get($configuration, dynamicTextShadowStyleDesktop),
            shadowXOffset: map-get($configuration, dynamicTextShadowXoffsetDesktop),
            shadowYOffset: map-get($configuration, dynamicTextShadowYoffsetDesktop),
            shadowBlur: map-get($configuration, dynamicTextShadowBlurDesktop),
            shadowSpread: map-get($configuration, dynamicTextShadowSpreadDesktop),
            shadowColor: map-get($configuration, dynamicTextShadowColorDesktop)));
      }

      p {
        color: map-get($configuration, paragraphTextColor);
        font-family: map-get($configuration, paragraphFontFamily);
        font-size: map-get($configuration, paragraphFontSize);
        font-style: map-get($configuration, paragraphFontStyle);
        text-decoration: map-get($configuration, paragraphFontDecoration);
        line-height: map-get($configuration, paragraphLineHeight);
        font-weight: map-get($configuration, paragraphFontWeight);
        min-height: 1em;

        margin-top: map-get($configuration, paragraphMarginTop);
        margin-bottom: map-get($configuration, paragraphMarginBottom);

        // Styles for tablet
        @include above($tabletBreakpoint) {
          color: map-get($configuration, paragraphTextColorTablet);
          font-family: map-get($configuration, paragraphFontFamilyTablet);
          font-size: map-get($configuration, paragraphFontSizeTablet);
          font-style: map-get($configuration, paragraphFontStyleTablet);
          text-decoration: map-get($configuration, paragraphFontDecorationTablet);
          line-height: map-get($configuration, paragraphLineHeightTablet);
          font-weight: map-get($configuration, paragraphFontWeightTablet);

          margin-top: map-get($configuration, paragraphMarginTopTablet);
          margin-bottom: map-get($configuration, paragraphMarginBottomTablet);
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          color: map-get($configuration, paragraphTextColorDesktop);
          font-family: map-get($configuration, paragraphFontFamilyDesktop);
          font-size: map-get($configuration, paragraphFontSizeDesktop);
          font-style: map-get($configuration, paragraphFontStyleDesktop);
          text-decoration: map-get($configuration, paragraphFontDecorationDesktop);
          line-height: map-get($configuration, paragraphLineHeightDesktop);
          font-weight: map-get($configuration, paragraphFontWeightDesktop);

          margin-top: map-get($configuration, paragraphMarginTopDesktop);
          margin-bottom: map-get($configuration, paragraphMarginBottomDesktop);
        }
      }

      h1 {
        color: map-get($configuration, dynamicTextHeadingOneColor);
        font-family: map-get($configuration, dynamicTextHeadingOneFontFamily);
        font-size: map-get($configuration, dynamicTextHeadingOneSize);
        font-style: map-get($configuration, dynamicTextHeadingOneStyle);
        text-decoration: map-get($configuration, dynamicTextHeadingOneDecoration);
        line-height: map-get($configuration, dynamicTextHeadingOneHeight);
        font-weight: map-get($configuration, dynamicTextHeadingOneWeight);

        margin-top: map-get($configuration, dynamicTextHeadingOneMarginTop);
        margin-bottom: map-get($configuration, dynamicTextHeadingOneMarginBottom);

        // Styles for tablet
        @include above($tabletBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingOneColorTablet);
          font-family: map-get($configuration, dynamicTextHeadingOneFontFamilyTablet);
          font-size: map-get($configuration, dynamicTextHeadingOneSizeTablet);
          font-style: map-get($configuration, dynamicTextHeadingOneStyleTablet);
          text-decoration: map-get($configuration, dynamicTextHeadingOneDecorationTablet);
          line-height: map-get($configuration, dynamicTextHeadingOneHeightTablet);
          font-weight: map-get($configuration, dynamicTextHeadingOneWeightTablet);

          margin-top: map-get($configuration, dynamicTextHeadingOneMarginTopTablet);
          margin-bottom: map-get($configuration, dynamicTextHeadingOneMarginBottomTablet);
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingOneColorDesktop);
          font-family: map-get($configuration, dynamicTextHeadingOneFontFamilyDesktop);
          font-size: map-get($configuration, dynamicTextHeadingOneSizeDesktop);
          font-style: map-get($configuration, dynamicTextHeadingOneStyleDesktop);
          text-decoration: map-get($configuration, dynamicTextHeadingOneDecorationDesktop);
          line-height: map-get($configuration, dynamicTextHeadingOneHeightDesktop);
          font-weight: map-get($configuration, dynamicTextHeadingOneWeightDesktop);

          margin-top: map-get($configuration, dynamicTextHeadingOneMarginTopDesktop);
          margin-bottom: map-get($configuration, dynamicTextHeadingOneMarginBottomDesktop);
        }
      }

      h2 {
        color: map-get($configuration, dynamicTextHeadingTwoColor);
        font-family: map-get($configuration, dynamicTextHeadingTwoFontFamily);
        font-size: map-get($configuration, dynamicTextHeadingTwoSize);
        font-style: map-get($configuration, dynamicTextHeadingTwoStyle);
        text-decoration: map-get($configuration, textHeadingTwoDecoration);
        line-height: map-get($configuration, dynamicTextHeadingTwoHeight);
        font-weight: map-get($configuration, dynamicTextHeadingTwoWeight);

        margin-top: map-get($configuration, dynamicTextHeadingTwoMarginTop);
        margin-bottom: map-get($configuration, dynamicTextHeadingTwoMarginBottom);

        // Styles for tablet
        @include above($tabletBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingTwoColorTablet);
          font-family: map-get($configuration, dynamicTextHeadingTwoFontFamilyTablet);
          font-size: map-get($configuration, dynamicTextHeadingTwoSizeTablet);
          font-style: map-get($configuration, dynamicTextHeadingTwoStyleTablet);
          text-decoration: map-get($configuration, dynamicTextHeadingTwoDecorationTablet);
          line-height: map-get($configuration, dynamicTextHeadingTwoHeightTablet);
          font-weight: map-get($configuration, dynamicTextHeadingTwoWeightTablet);

          margin-top: map-get($configuration, dynamicTextHeadingTwoMarginTopTablet);
          margin-bottom: map-get($configuration, dynamicTextHeadingTwoMarginBottomTablet);
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingTwoColorDesktop);
          font-family: map-get($configuration, dynamicTextHeadingTwoFontFamilyDesktop);
          font-size: map-get($configuration, dynamicTextHeadingTwoSizeDesktop);
          font-style: map-get($configuration, dynamicTextHeadingTwoStyleDesktop);
          text-decoration: map-get($configuration, dynamicTextHeadingTwoDecorationDesktop);
          line-height: map-get($configuration, dynamicTextHeadingTwoHeightDesktop);
          font-weight: map-get($configuration, dynamicTextHeadingTwoWeightDesktop);

          margin-top: map-get($configuration, dynamicTextHeadingTwoMarginTopDesktop);
          margin-bottom: map-get($configuration, dynamicTextHeadingTwoMarginBottomDesktop);
        }
      }

      h3 {
        color: map-get($configuration, dynamicTextHeadingThreeColor);
        font-family: map-get($configuration, dynamicTextHeadingThreeFontFamily);
        font-size: map-get($configuration, dynamicTextHeadingThreeSize);
        font-style: map-get($configuration, dynamicTextHeadingThreeStyle);
        text-decoration: map-get($configuration, dynamicTextHeadingThreeDecoration);
        line-height: map-get($configuration, dynamicTextHeadingThreeHeight);
        font-weight: map-get($configuration, dynamicTextHeadingThreeWeight);

        margin-top: map-get($configuration, dynamicTextHeadingThreeMarginTop);
        margin-bottom: map-get($configuration, dynamicTextHeadingThreeMarginBottom);

        // Styles for tablet
        @include above($tabletBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingThreeColorTablet);
          font-family: map-get($configuration, dynamicTextHeadingThreeFontFamilyTablet);
          font-size: map-get($configuration, dynamicTextHeadingThreeSizeTablet);
          font-style: map-get($configuration, dynamicTextHeadingThreeStyleTablet);
          text-decoration: map-get($configuration, dynamicTextHeadingThreeDecorationTablet);
          line-height: map-get($configuration, dynamicTextHeadingThreeHeightTablet);
          font-weight: map-get($configuration, dynamicTextHeadingThreeWeightTablet);

          margin-top: map-get($configuration, dynamicTextHeadingThreeMarginTopTablet);
          margin-bottom: map-get($configuration, dynamicTextHeadingThreeMarginBottomTablet);
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingThreeColorDesktop);
          font-family: map-get($configuration, dynamicTextHeadingThreeFontFamilyDesktop);
          font-size: map-get($configuration, dynamicTextHeadingThreeSizeDesktop);
          font-style: map-get($configuration, dynamicTextHeadingThreeStyleDesktop);
          text-decoration: map-get($configuration, dynamicTextHeadingThreeDecorationDesktop);
          line-height: map-get($configuration, dynamicTextHeadingThreeHeightDesktop);
          font-weight: map-get($configuration, dynamicTextHeadingThreeWeightDesktop);

          margin-top: map-get($configuration, dynamicTextHeadingThreeMarginTopDesktop);
          margin-bottom: map-get($configuration, dynamicTextHeadingThreeMarginBottomDesktop);
        }
      }

      h4 {
        color: map-get($configuration, dynamicTextHeadingFourColor);
        font-family: map-get($configuration, dynamicTextHeadingFourFontFamily);
        font-size: map-get($configuration, dynamicTextHeadingFourSize);
        font-style: map-get($configuration, dynamicTextHeadingFourStyle);
        text-decoration: map-get($configuration, dynamicTextHeadingFourDecoration);
        line-height: map-get($configuration, dynamicTextHeadingFourHeight);
        font-weight: map-get($configuration, dynamicTextHeadingFourWeight);

        margin-top: map-get($configuration, dynamicTextHeadingFourMarginTop);
        margin-bottom: map-get($configuration, dynamicTextHeadingFourMarginBottom);

        // Styles for tablet
        @include above($tabletBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingFourColorTablet);
          font-family: map-get($configuration, dynamicTextHeadingFourFontFamilyTablet);
          font-size: map-get($configuration, dynamicTextHeadingFourSizeTablet);
          font-style: map-get($configuration, dynamicTextHeadingFourStyleTablet);
          text-decoration: map-get($configuration, dynamicTextHeadingFourDecorationTablet);
          line-height: map-get($configuration, dynamicTextHeadingFourHeightTablet);
          font-weight: map-get($configuration, dynamicTextHeadingFourWeightTablet);

          margin-top: map-get($configuration, dynamicTextHeadingFourMarginTopTablet);
          margin-bottom: map-get($configuration, dynamicTextHeadingFourMarginBottomTablet);
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingFourColorDesktop);
          font-family: map-get($configuration, dynamicTextHeadingFourFontFamilyDesktop);
          font-size: map-get($configuration, dynamicTextHeadingFourSizeDesktop);
          font-style: map-get($configuration, dynamicTextHeadingFourStyleDesktop);
          text-decoration: map-get($configuration, dynamicTextHeadingFourDecorationDesktop);
          line-height: map-get($configuration, dynamicTextHeadingFourHeightDesktop);
          font-weight: map-get($configuration, dynamicTextHeadingFourWeightDesktop);

          margin-top: map-get($configuration, dynamicTextHeadingFourMarginTopDesktop);
          margin-bottom: map-get($configuration, dynamicTextHeadingFourMarginBottomDesktop);
        }
      }

      h5 {
        color: map-get($configuration, dynamicTextHeadingFiveColor);
        font-family: map-get($configuration, dynamicTextHeadingFiveFontFamily);
        font-size: map-get($configuration, dynamicTextHeadingFiveSize);
        font-style: map-get($configuration, dynamicTextHeadingFiveStyle);
        text-decoration: map-get($configuration, dynamicTextHeadingFiveDecoration);
        line-height: map-get($configuration, dynamicTextHeadingFiveHeight);
        font-weight: map-get($configuration, dynamicTextHeadingFiveWeight);

        margin-top: map-get($configuration, dynamicTextHeadingFiveMarginTop);
        margin-bottom: map-get($configuration, dynamicTextHeadingFiveMarginBottom);

        // Styles for tablet
        @include above($tabletBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingFiveColorTablet);
          font-family: map-get($configuration, dynamicTextHeadingFiveFontFamilyTablet);
          font-size: map-get($configuration, dynamicTextHeadingFiveSizeTablet);
          font-style: map-get($configuration, dynamicTextHeadingFiveStyleTablet);
          text-decoration: map-get($configuration, dynamicTextHeadingFiveDecorationTablet);
          line-height: map-get($configuration, dynamicTextHeadingFiveHeightTablet);
          font-weight: map-get($configuration, dynamicTextHeadingFiveWeightTablet);

          margin-top: map-get($configuration, dynamicTextHeadingFiveMarginTopTablet);
          margin-bottom: map-get($configuration, dynamicTextHeadingFiveMarginBottomTablet);
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingFiveColorDesktop);
          font-family: map-get($configuration, dynamicTextHeadingFiveFontFamilyDesktop);
          font-size: map-get($configuration, dynamicTextHeadingFiveSizeDesktop);
          font-style: map-get($configuration, dynamicTextHeadingFiveStyleDesktop);
          text-decoration: map-get($configuration, dynamicTextHeadingFiveDecorationDesktop);
          line-height: map-get($configuration, dynamicTextHeadingFiveHeightDesktop);
          font-weight: map-get($configuration, dynamicTextHeadingFiveWeightDesktop);

          margin-top: map-get($configuration, dynamicTextHeadingFiveMarginTopDesktop);
          margin-bottom: map-get($configuration, dynamicTextHeadingFiveMarginBottomDesktop);
        }
      }

      h6 {
        color: map-get($configuration, dynamicTextHeadingSixColor);
        font-family: map-get($configuration, dynamicTextHeadingSixFontFamily);
        font-size: map-get($configuration, dynamicTextHeadingSixSize);
        font-style: map-get($configuration, dynamicTextHeadingSixStyle);
        text-decoration: map-get($configuration, dynamicTextHeadingSixDecoration);
        line-height: map-get($configuration, dynamicTextHeadingSixHeight);
        font-weight: map-get($configuration, dynamicTextHeadingSixWeight);

        margin-top: map-get($configuration, dynamicTextHeadingSixMarginTop);
        margin-bottom: map-get($configuration, dynamicTextHeadingSixMarginBottom);

        // Styles for tablet
        @include above($tabletBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingSixColorTablet);
          font-family: map-get($configuration, dynamicTextHeadingSixFontFamilyTablet);
          font-size: map-get($configuration, dynamicTextHeadingSixSizeTablet);
          font-style: map-get($configuration, dynamicTextHeadingSixStyleTablet);
          text-decoration: map-get($configuration, dynamicTextHeadingSixDecorationTablet);
          line-height: map-get($configuration, dynamicTextHeadingSixHeightTablet);
          font-weight: map-get($configuration, dynamicTextHeadingSixWeightTablet);

          margin-top: map-get($configuration, dynamicTextHeadingSixMarginTopTablet);
          margin-bottom: map-get($configuration, dynamicTextHeadingSixMarginBottomTablet);
        }

        // Styles for desktop
        @include above($desktopBreakpoint) {
          color: map-get($configuration, dynamicTextHeadingSixColorDesktop);
          font-family: map-get($configuration, dynamicTextHeadingSixFontFamilyDesktop);
          font-size: map-get($configuration, dynamicTextHeadingSixSizeDesktop);
          font-style: map-get($configuration, dynamicTextHeadingSixStyleDesktop);
          text-decoration: map-get($configuration, dynamicTextHeadingSixDecorationDesktop);
          line-height: map-get($configuration, dynamicTextHeadingSixHeightDesktop);
          font-weight: map-get($configuration, dynamicTextHeadingSixWeightDesktop);

          margin-top: map-get($configuration, dynamicTextHeadingSixMarginTopDesktop);
          margin-bottom: map-get($configuration, dynamicTextHeadingSixMarginBottomDesktop);
        }
      }
    }
  }
}

/* Export common styles */
@include componentStyles();

/* Export styles for each widget instance */
@if variable-exists(widgetInstances) {
  @each $widgetInstance in $widgetInstances {
    @if nth($widgetInstance, 2)==$variablePrefix {
      @include componentStyles(nth($widgetInstance, 3), nth($widgetInstance, 1), nth($widgetInstance, 4));
    }
  }
}